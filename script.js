let faqData = {}; // JSON ‡§∏‡•á ‡§°‡•á‡§ü‡§æ ‡§Ü‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§π‡•ã‡§ó‡§æ
let chatHistory = []; // ‡§≤‡•ã‡§ï‡§≤ ‡§ö‡•à‡§ü ‡§π‡§ø‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä

// LocalStorage ‡§∏‡•á ‡§ö‡•à‡§ü ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
window.onload = () => {
  loadChatHistory();
};

// FAQ JSON ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
fetch('faq.json')
  .then(res => res.json())
  .then(data => { faqData = data; })
  .catch(err => console.error("FAQ JSON ‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§∏‡§ï‡§æ:", err));

// ‡§ö‡•à‡§ü ‡§¨‡•â‡§ï‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ú‡•ã‡§°‡§º‡§®‡•á ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
function addMessage(text, type = 'received') {
  const chatBox = document.getElementById('chat-box');
  const msg = document.createElement('div');
  msg.classList.add('msg', type);
  msg.textContent = text;
  chatBox.appendChild(msg);
  chatBox.scrollTop = chatBox.scrollHeight;

  // ‡§≤‡•ã‡§ï‡§≤ ‡§π‡§ø‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç
  chatHistory.push({ text, type });
  saveChatHistory();
}

// ‡§â‡§§‡•ç‡§§‡§∞ ‡§ñ‡•ã‡§ú‡§®‡•á ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
function findAnswer(inputText) {
  inputText = inputText.trim().toLowerCase();
  const lang = detectLanguage(inputText);
  const faqs = faqData[lang] || [];

  // Exact match
  for (let i = 0; i < faqs.length; i++) {
    if (faqs[i].q.toLowerCase() === inputText) {
      return faqs[i].a;
    }
  }

  // Keyword match
  for (let i = 0; i < faqs.length; i++) {
    const words = faqs[i].q.toLowerCase().split(" ");
    let match = true;
    for (let w of words) {
      if (!inputText.includes(w)) {
        match = false;
        break;
      }
    }
    if (match) return faqs[i].a;
  }

  return "‡§Æ‡§æ‡§´‡§º ‡§ï‡•Ä‡§ú‡§ø‡§è, ‡§Æ‡•Å‡§ù‡•á ‡§â‡§∏ ‡§∏‡§µ‡§æ‡§≤ ‡§ï‡§æ ‡§â‡§§‡•ç‡§§‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§™‡§§‡§æ‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ HR ‡§∏‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç‡•§";
}

// ‡§≠‡§æ‡§∑‡§æ ‡§™‡§π‡§ö‡§æ‡§®‡•á‡§Ç
function detectLanguage(text) {
  if (/[‡§Ä-‡•ø]/.test(text)) {
    return 'hi';
  } else if (/\b(kitna|kya|kab|kaam|hoga)\b/.test(text)) {
    return 'hinglish';
  } else {
    return 'en';
  }
}

// Send ‡§¨‡§ü‡§® ‡§î‡§∞ Enter ‡§™‡§∞ ‡§≠‡•á‡§ú‡§®‡§æ
function handleSend() {
  const input = document.getElementById('user-input');
  const text = input.value.trim();
  if (!text) return;

  addMessage(text, 'sent');

  setTimeout(() => {
    const answer = findAnswer(text);
    addMessage(answer, 'received');
  }, 500);

  input.value = '';
}

document.getElementById('send-btn').addEventListener('click', handleSend);
document.getElementById('user-input').addEventListener('keypress', (e) => {
  if (e.key === 'Enter') handleSend();
});

// üîÅ LocalStorage: ‡§∏‡•á‡§µ ‡§î‡§∞ ‡§≤‡•ã‡§° ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§®
function saveChatHistory() {
  localStorage.setItem('chatHistory', JSON.stringify(chatHistory));
}

function loadChatHistory() {
  const saved = localStorage.getItem('chatHistory');
  if (saved) {
    chatHistory = JSON.parse(saved);
    chatHistory.forEach(msg => addMessage(msg.text, msg.type));
  }
}
